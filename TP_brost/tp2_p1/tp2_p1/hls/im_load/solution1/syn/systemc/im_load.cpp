// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "im_load.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic im_load::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic im_load::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> im_load::ap_ST_fsm_state1 = "1";
const sc_lv<5> im_load::ap_ST_fsm_state2 = "10";
const sc_lv<5> im_load::ap_ST_fsm_state3 = "100";
const sc_lv<5> im_load::ap_ST_fsm_state4 = "1000";
const sc_lv<5> im_load::ap_ST_fsm_state5 = "10000";
const sc_lv<32> im_load::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> im_load::ap_const_lv32_3 = "11";
const sc_lv<32> im_load::ap_const_lv32_4 = "100";
const sc_lv<32> im_load::ap_const_lv32_1 = "1";
const sc_lv<1> im_load::ap_const_lv1_0 = "0";
const sc_lv<1> im_load::ap_const_lv1_1 = "1";
const sc_lv<32> im_load::ap_const_lv32_2 = "10";
const sc_lv<9> im_load::ap_const_lv9_0 = "000000000";
const sc_lv<10> im_load::ap_const_lv10_0 = "0000000000";
const sc_lv<2> im_load::ap_const_lv2_0 = "00";
const sc_lv<2> im_load::ap_const_lv2_1 = "1";
const sc_lv<2> im_load::ap_const_lv2_2 = "10";
const sc_lv<9> im_load::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> im_load::ap_const_lv9_1 = "1";
const sc_lv<7> im_load::ap_const_lv7_0 = "0000000";
const sc_lv<19> im_load::ap_const_lv19_280 = "1010000000";
const sc_lv<10> im_load::ap_const_lv10_280 = "1010000000";
const sc_lv<10> im_load::ap_const_lv10_1 = "1";
const sc_lv<32> im_load::ap_const_lv32_9 = "1001";
const sc_lv<10> im_load::ap_const_lv10_27F = "1001111111";
const bool im_load::ap_const_boolean_1 = true;

im_load::im_load(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_m_axis_video_V_data_V_U = new regslice_both<8>("regslice_both_m_axis_video_V_data_V_U");
    regslice_both_m_axis_video_V_data_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_data_V_U->data_in(mem_V_q0);
    regslice_both_m_axis_video_V_data_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_data_V_U->ack_in(m_axis_video_TREADY_int);
    regslice_both_m_axis_video_V_data_V_U->data_out(m_axis_video_TDATA);
    regslice_both_m_axis_video_V_data_V_U->vld_out(regslice_both_m_axis_video_V_data_V_U_vld_out);
    regslice_both_m_axis_video_V_data_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_data_V_U->apdone_blk(regslice_both_m_axis_video_V_data_V_U_apdone_blk);
    regslice_both_m_axis_video_V_keep_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_keep_V_U");
    regslice_both_m_axis_video_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_keep_V_U->data_in(ap_var_for_const0);
    regslice_both_m_axis_video_V_keep_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_keep_V_U->ack_in(regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_keep_V_U->data_out(m_axis_video_TKEEP);
    regslice_both_m_axis_video_V_keep_V_U->vld_out(regslice_both_m_axis_video_V_keep_V_U_vld_out);
    regslice_both_m_axis_video_V_keep_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_keep_V_U->apdone_blk(regslice_both_m_axis_video_V_keep_V_U_apdone_blk);
    regslice_both_m_axis_video_V_strb_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_strb_V_U");
    regslice_both_m_axis_video_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_strb_V_U->data_in(ap_var_for_const0);
    regslice_both_m_axis_video_V_strb_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_strb_V_U->ack_in(regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_strb_V_U->data_out(m_axis_video_TSTRB);
    regslice_both_m_axis_video_V_strb_V_U->vld_out(regslice_both_m_axis_video_V_strb_V_U_vld_out);
    regslice_both_m_axis_video_V_strb_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_strb_V_U->apdone_blk(regslice_both_m_axis_video_V_strb_V_U_apdone_blk);
    regslice_both_m_axis_video_V_user_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_user_V_U");
    regslice_both_m_axis_video_V_user_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_user_V_U->data_in(tmp_user_V_reg_453);
    regslice_both_m_axis_video_V_user_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_user_V_U->ack_in(regslice_both_m_axis_video_V_user_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_user_V_U->data_out(m_axis_video_TUSER);
    regslice_both_m_axis_video_V_user_V_U->vld_out(regslice_both_m_axis_video_V_user_V_U_vld_out);
    regslice_both_m_axis_video_V_user_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_user_V_U->apdone_blk(regslice_both_m_axis_video_V_user_V_U_apdone_blk);
    regslice_both_m_axis_video_V_last_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_last_V_U");
    regslice_both_m_axis_video_V_last_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_last_V_U->data_in(tmp_last_V_reg_458);
    regslice_both_m_axis_video_V_last_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_last_V_U->ack_in(regslice_both_m_axis_video_V_last_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_last_V_U->data_out(m_axis_video_TLAST);
    regslice_both_m_axis_video_V_last_V_U->vld_out(regslice_both_m_axis_video_V_last_V_U_vld_out);
    regslice_both_m_axis_video_V_last_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_last_V_U->apdone_blk(regslice_both_m_axis_video_V_last_V_U_apdone_blk);
    regslice_both_m_axis_video_V_id_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_id_V_U");
    regslice_both_m_axis_video_V_id_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_id_V_U->data_in(ap_var_for_const0);
    regslice_both_m_axis_video_V_id_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_id_V_U->ack_in(regslice_both_m_axis_video_V_id_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_id_V_U->data_out(m_axis_video_TID);
    regslice_both_m_axis_video_V_id_V_U->vld_out(regslice_both_m_axis_video_V_id_V_U_vld_out);
    regslice_both_m_axis_video_V_id_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_id_V_U->apdone_blk(regslice_both_m_axis_video_V_id_V_U_apdone_blk);
    regslice_both_m_axis_video_V_dest_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_dest_V_U");
    regslice_both_m_axis_video_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_dest_V_U->data_in(ap_var_for_const0);
    regslice_both_m_axis_video_V_dest_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_dest_V_U->ack_in(regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_dest_V_U->data_out(m_axis_video_TDEST);
    regslice_both_m_axis_video_V_dest_V_U->vld_out(regslice_both_m_axis_video_V_dest_V_U_vld_out);
    regslice_both_m_axis_video_V_dest_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_dest_V_U->apdone_blk(regslice_both_m_axis_video_V_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln31_1_fu_248_p2);
    sensitive << ( zext_ln31_1_fu_244_p1 );
    sensitive << ( zext_ln31_fu_232_p1 );

    SC_METHOD(thread_add_ln31_fu_356_p2);
    sensitive << ( add_ln31_1_reg_425 );
    sensitive << ( zext_ln19_fu_302_p1 );

    SC_METHOD(thread_add_ln34_1_fu_284_p2);
    sensitive << ( zext_ln34_1_fu_280_p1 );
    sensitive << ( zext_ln34_fu_268_p1 );

    SC_METHOD(thread_add_ln34_fu_361_p2);
    sensitive << ( add_ln34_1_reg_430 );
    sensitive << ( zext_ln19_fu_302_p1 );

    SC_METHOD(thread_add_ln37_fu_290_p2);
    sensitive << ( add_ln31_1_fu_248_p2 );

    SC_METHOD(thread_add_ln40_fu_296_p2);
    sensitive << ( add_ln34_1_fu_284_p2 );

    SC_METHOD(thread_and_ln879_1_fu_200_p2);
    sensitive << ( icmp_ln879_2_fu_170_p2 );
    sensitive << ( xor_ln879_1_fu_194_p2 );

    SC_METHOD(thread_and_ln879_fu_182_p2);
    sensitive << ( icmp_ln879_1_fu_164_p2 );
    sensitive << ( xor_ln879_fu_176_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln16_fu_212_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln16_fu_212_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_i_fu_218_p2);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_icmp_ln16_fu_212_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_icmp_ln19_fu_306_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_icmp_ln879_1_fu_164_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode_V );

    SC_METHOD(thread_icmp_ln879_2_fu_170_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode_V );

    SC_METHOD(thread_icmp_ln879_fu_158_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode_V );

    SC_METHOD(thread_j_fu_312_p2);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_m_axis_video_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_m_axis_video_TVALID);
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_vld_out );

    SC_METHOD(thread_m_axis_video_TVALID_int);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_mem_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln879_fu_397_p1 );

    SC_METHOD(thread_mem_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_or_ln21_fu_322_p2);
    sensitive << ( i_0_reg_135 );
    sensitive << ( trunc_ln21_fu_318_p1 );

    SC_METHOD(thread_or_ln879_1_fu_206_p2);
    sensitive << ( and_ln879_1_fu_200_p2 );
    sensitive << ( and_ln879_fu_182_p2 );

    SC_METHOD(thread_or_ln879_fu_188_p2);
    sensitive << ( icmp_ln879_fu_158_p2 );
    sensitive << ( icmp_ln879_1_fu_164_p2 );

    SC_METHOD(thread_or_ln_fu_336_p3);
    sensitive << ( tmp_fu_328_p3 );
    sensitive << ( or_ln21_fu_322_p2 );

    SC_METHOD(thread_select_ln879_1_fu_383_p3);
    sensitive << ( icmp_ln879_reg_402 );
    sensitive << ( add_ln31_fu_356_p2 );
    sensitive << ( sub_ln40_fu_371_p2 );

    SC_METHOD(thread_select_ln879_2_fu_390_p3);
    sensitive << ( or_ln879_1_reg_412 );
    sensitive << ( select_ln879_fu_376_p3 );
    sensitive << ( select_ln879_1_fu_383_p3 );

    SC_METHOD(thread_select_ln879_fu_376_p3);
    sensitive << ( and_ln879_1_reg_407 );
    sensitive << ( sub_ln37_fu_366_p2 );
    sensitive << ( add_ln34_fu_361_p2 );

    SC_METHOD(thread_shl_ln1_fu_260_p3);
    sensitive << ( sub_ln34_fu_254_p2 );

    SC_METHOD(thread_shl_ln31_1_fu_236_p3);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_shl_ln34_1_fu_272_p3);
    sensitive << ( sub_ln34_fu_254_p2 );

    SC_METHOD(thread_shl_ln_fu_224_p3);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_sub_ln34_fu_254_p2);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_sub_ln37_fu_366_p2);
    sensitive << ( add_ln37_reg_435 );
    sensitive << ( zext_ln19_fu_302_p1 );

    SC_METHOD(thread_sub_ln40_fu_371_p2);
    sensitive << ( add_ln40_reg_440 );
    sensitive << ( zext_ln19_fu_302_p1 );

    SC_METHOD(thread_tmp_fu_328_p3);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_tmp_last_V_fu_350_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_306_p2 );
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_tmp_user_V_fu_344_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_306_p2 );
    sensitive << ( or_ln_fu_336_p3 );

    SC_METHOD(thread_trunc_ln21_fu_318_p1);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_xor_ln879_1_fu_194_p2);
    sensitive << ( or_ln879_fu_188_p2 );

    SC_METHOD(thread_xor_ln879_fu_176_p2);
    sensitive << ( icmp_ln879_fu_158_p2 );

    SC_METHOD(thread_zext_ln19_fu_302_p1);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_zext_ln31_1_fu_244_p1);
    sensitive << ( shl_ln31_1_fu_236_p3 );

    SC_METHOD(thread_zext_ln31_fu_232_p1);
    sensitive << ( shl_ln_fu_224_p3 );

    SC_METHOD(thread_zext_ln34_1_fu_280_p1);
    sensitive << ( shl_ln34_1_fu_272_p3 );

    SC_METHOD(thread_zext_ln34_fu_268_p1);
    sensitive << ( shl_ln1_fu_260_p3 );

    SC_METHOD(thread_zext_ln879_fu_397_p1);
    sensitive << ( select_ln879_2_fu_390_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln16_fu_212_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln19_fu_306_p2 );
    sensitive << ( m_axis_video_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "im_load_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mode_V, "(port)mode_V");
    sc_trace(mVcdFile, m_axis_video_TDATA, "(port)m_axis_video_TDATA");
    sc_trace(mVcdFile, m_axis_video_TVALID, "(port)m_axis_video_TVALID");
    sc_trace(mVcdFile, m_axis_video_TREADY, "(port)m_axis_video_TREADY");
    sc_trace(mVcdFile, m_axis_video_TKEEP, "(port)m_axis_video_TKEEP");
    sc_trace(mVcdFile, m_axis_video_TSTRB, "(port)m_axis_video_TSTRB");
    sc_trace(mVcdFile, m_axis_video_TUSER, "(port)m_axis_video_TUSER");
    sc_trace(mVcdFile, m_axis_video_TLAST, "(port)m_axis_video_TLAST");
    sc_trace(mVcdFile, m_axis_video_TID, "(port)m_axis_video_TID");
    sc_trace(mVcdFile, m_axis_video_TDEST, "(port)m_axis_video_TDEST");
    sc_trace(mVcdFile, mem_V_address0, "(port)mem_V_address0");
    sc_trace(mVcdFile, mem_V_ce0, "(port)mem_V_ce0");
    sc_trace(mVcdFile, mem_V_q0, "(port)mem_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_axis_video_TDATA_blk_n, "m_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln879_fu_158_p2, "icmp_ln879_fu_158_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_402, "icmp_ln879_reg_402");
    sc_trace(mVcdFile, and_ln879_1_fu_200_p2, "and_ln879_1_fu_200_p2");
    sc_trace(mVcdFile, and_ln879_1_reg_407, "and_ln879_1_reg_407");
    sc_trace(mVcdFile, or_ln879_1_fu_206_p2, "or_ln879_1_fu_206_p2");
    sc_trace(mVcdFile, or_ln879_1_reg_412, "or_ln879_1_reg_412");
    sc_trace(mVcdFile, i_fu_218_p2, "i_fu_218_p2");
    sc_trace(mVcdFile, i_reg_420, "i_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_apdone_blk, "regslice_both_m_axis_video_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, add_ln31_1_fu_248_p2, "add_ln31_1_fu_248_p2");
    sc_trace(mVcdFile, add_ln31_1_reg_425, "add_ln31_1_reg_425");
    sc_trace(mVcdFile, icmp_ln16_fu_212_p2, "icmp_ln16_fu_212_p2");
    sc_trace(mVcdFile, add_ln34_1_fu_284_p2, "add_ln34_1_fu_284_p2");
    sc_trace(mVcdFile, add_ln34_1_reg_430, "add_ln34_1_reg_430");
    sc_trace(mVcdFile, add_ln37_fu_290_p2, "add_ln37_fu_290_p2");
    sc_trace(mVcdFile, add_ln37_reg_435, "add_ln37_reg_435");
    sc_trace(mVcdFile, add_ln40_fu_296_p2, "add_ln40_fu_296_p2");
    sc_trace(mVcdFile, add_ln40_reg_440, "add_ln40_reg_440");
    sc_trace(mVcdFile, j_fu_312_p2, "j_fu_312_p2");
    sc_trace(mVcdFile, j_reg_448, "j_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_user_V_fu_344_p2, "tmp_user_V_fu_344_p2");
    sc_trace(mVcdFile, tmp_user_V_reg_453, "tmp_user_V_reg_453");
    sc_trace(mVcdFile, icmp_ln19_fu_306_p2, "icmp_ln19_fu_306_p2");
    sc_trace(mVcdFile, tmp_last_V_fu_350_p2, "tmp_last_V_fu_350_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_458, "tmp_last_V_reg_458");
    sc_trace(mVcdFile, i_0_reg_135, "i_0_reg_135");
    sc_trace(mVcdFile, j_0_reg_147, "j_0_reg_147");
    sc_trace(mVcdFile, zext_ln879_fu_397_p1, "zext_ln879_fu_397_p1");
    sc_trace(mVcdFile, icmp_ln879_1_fu_164_p2, "icmp_ln879_1_fu_164_p2");
    sc_trace(mVcdFile, xor_ln879_fu_176_p2, "xor_ln879_fu_176_p2");
    sc_trace(mVcdFile, or_ln879_fu_188_p2, "or_ln879_fu_188_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_170_p2, "icmp_ln879_2_fu_170_p2");
    sc_trace(mVcdFile, xor_ln879_1_fu_194_p2, "xor_ln879_1_fu_194_p2");
    sc_trace(mVcdFile, and_ln879_fu_182_p2, "and_ln879_fu_182_p2");
    sc_trace(mVcdFile, shl_ln_fu_224_p3, "shl_ln_fu_224_p3");
    sc_trace(mVcdFile, shl_ln31_1_fu_236_p3, "shl_ln31_1_fu_236_p3");
    sc_trace(mVcdFile, zext_ln31_1_fu_244_p1, "zext_ln31_1_fu_244_p1");
    sc_trace(mVcdFile, zext_ln31_fu_232_p1, "zext_ln31_fu_232_p1");
    sc_trace(mVcdFile, sub_ln34_fu_254_p2, "sub_ln34_fu_254_p2");
    sc_trace(mVcdFile, shl_ln1_fu_260_p3, "shl_ln1_fu_260_p3");
    sc_trace(mVcdFile, shl_ln34_1_fu_272_p3, "shl_ln34_1_fu_272_p3");
    sc_trace(mVcdFile, zext_ln34_1_fu_280_p1, "zext_ln34_1_fu_280_p1");
    sc_trace(mVcdFile, zext_ln34_fu_268_p1, "zext_ln34_fu_268_p1");
    sc_trace(mVcdFile, trunc_ln21_fu_318_p1, "trunc_ln21_fu_318_p1");
    sc_trace(mVcdFile, tmp_fu_328_p3, "tmp_fu_328_p3");
    sc_trace(mVcdFile, or_ln21_fu_322_p2, "or_ln21_fu_322_p2");
    sc_trace(mVcdFile, or_ln_fu_336_p3, "or_ln_fu_336_p3");
    sc_trace(mVcdFile, zext_ln19_fu_302_p1, "zext_ln19_fu_302_p1");
    sc_trace(mVcdFile, sub_ln37_fu_366_p2, "sub_ln37_fu_366_p2");
    sc_trace(mVcdFile, add_ln34_fu_361_p2, "add_ln34_fu_361_p2");
    sc_trace(mVcdFile, add_ln31_fu_356_p2, "add_ln31_fu_356_p2");
    sc_trace(mVcdFile, sub_ln40_fu_371_p2, "sub_ln40_fu_371_p2");
    sc_trace(mVcdFile, select_ln879_fu_376_p3, "select_ln879_fu_376_p3");
    sc_trace(mVcdFile, select_ln879_1_fu_383_p3, "select_ln879_1_fu_383_p3");
    sc_trace(mVcdFile, select_ln879_2_fu_390_p3, "select_ln879_2_fu_390_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, m_axis_video_TVALID_int, "m_axis_video_TVALID_int");
    sc_trace(mVcdFile, m_axis_video_TREADY_int, "m_axis_video_TREADY_int");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_vld_out, "regslice_both_m_axis_video_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_apdone_blk, "regslice_both_m_axis_video_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_vld_out, "regslice_both_m_axis_video_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_apdone_blk, "regslice_both_m_axis_video_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_vld_out, "regslice_both_m_axis_video_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_apdone_blk, "regslice_both_m_axis_video_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_vld_out, "regslice_both_m_axis_video_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_apdone_blk, "regslice_both_m_axis_video_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_vld_out, "regslice_both_m_axis_video_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_apdone_blk, "regslice_both_m_axis_video_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_vld_out, "regslice_both_m_axis_video_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_apdone_blk, "regslice_both_m_axis_video_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_vld_out, "regslice_both_m_axis_video_V_dest_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("im_load.hdltvin.dat");
    mHdltvoutHandle.open("im_load.hdltvout.dat");
}

im_load::~im_load() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete regslice_both_m_axis_video_V_data_V_U;
    delete regslice_both_m_axis_video_V_keep_V_U;
    delete regslice_both_m_axis_video_V_strb_V_U;
    delete regslice_both_m_axis_video_V_user_V_U;
    delete regslice_both_m_axis_video_V_last_V_U;
    delete regslice_both_m_axis_video_V_id_V_U;
    delete regslice_both_m_axis_video_V_dest_V_U;
}

void im_load::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_0;
}

void im_load::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln19_fu_306_p2.read()))) {
        i_0_reg_135 = i_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_135 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_0))) {
        j_0_reg_147 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(m_axis_video_TREADY_int.read(), ap_const_logic_1))) {
        j_0_reg_147 = j_reg_448.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_0))) {
        add_ln31_1_reg_425 = add_ln31_1_fu_248_p2.read();
        add_ln34_1_reg_430 = add_ln34_1_fu_284_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln879_1_reg_407.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(or_ln879_1_reg_412.read(), ap_const_lv1_1))) {
        add_ln37_reg_435 = add_ln37_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln879_reg_402.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_ln879_1_reg_412.read(), ap_const_lv1_0))) {
        add_ln40_reg_440 = add_ln40_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        and_ln879_1_reg_407 = and_ln879_1_fu_200_p2.read();
        icmp_ln879_reg_402 = icmp_ln879_fu_158_p2.read();
        or_ln879_1_reg_412 = or_ln879_1_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        i_reg_420 = i_fu_218_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_448 = j_fu_312_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_306_p2.read()))) {
        tmp_last_V_reg_458 = tmp_last_V_fu_350_p2.read();
        tmp_user_V_reg_453 = tmp_user_V_fu_344_p2.read();
    }
}

void im_load::thread_add_ln31_1_fu_248_p2() {
    add_ln31_1_fu_248_p2 = (!zext_ln31_1_fu_244_p1.read().is_01() || !zext_ln31_fu_232_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(zext_ln31_1_fu_244_p1.read()) + sc_biguint<19>(zext_ln31_fu_232_p1.read()));
}

void im_load::thread_add_ln31_fu_356_p2() {
    add_ln31_fu_356_p2 = (!add_ln31_1_reg_425.read().is_01() || !zext_ln19_fu_302_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln31_1_reg_425.read()) + sc_biguint<19>(zext_ln19_fu_302_p1.read()));
}

void im_load::thread_add_ln34_1_fu_284_p2() {
    add_ln34_1_fu_284_p2 = (!zext_ln34_1_fu_280_p1.read().is_01() || !zext_ln34_fu_268_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(zext_ln34_1_fu_280_p1.read()) + sc_biguint<19>(zext_ln34_fu_268_p1.read()));
}

void im_load::thread_add_ln34_fu_361_p2() {
    add_ln34_fu_361_p2 = (!add_ln34_1_reg_430.read().is_01() || !zext_ln19_fu_302_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln34_1_reg_430.read()) + sc_biguint<19>(zext_ln19_fu_302_p1.read()));
}

void im_load::thread_add_ln37_fu_290_p2() {
    add_ln37_fu_290_p2 = (!add_ln31_1_fu_248_p2.read().is_01() || !ap_const_lv19_280.is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln31_1_fu_248_p2.read()) + sc_biguint<19>(ap_const_lv19_280));
}

void im_load::thread_add_ln40_fu_296_p2() {
    add_ln40_fu_296_p2 = (!add_ln34_1_fu_284_p2.read().is_01() || !ap_const_lv19_280.is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln34_1_fu_284_p2.read()) + sc_biguint<19>(ap_const_lv19_280));
}

void im_load::thread_and_ln879_1_fu_200_p2() {
    and_ln879_1_fu_200_p2 = (icmp_ln879_2_fu_170_p2.read() & xor_ln879_1_fu_194_p2.read());
}

void im_load::thread_and_ln879_fu_182_p2() {
    and_ln879_fu_182_p2 = (icmp_ln879_1_fu_164_p2.read() & xor_ln879_fu_176_p2.read());
}

void im_load::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void im_load::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void im_load::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void im_load::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void im_load::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void im_load::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void im_load::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void im_load::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void im_load::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void im_load::thread_i_fu_218_p2() {
    i_fu_218_p2 = (!i_0_reg_135.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_135.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void im_load::thread_icmp_ln16_fu_212_p2() {
    icmp_ln16_fu_212_p2 = (!i_0_reg_135.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_135.read() == ap_const_lv9_1E0);
}

void im_load::thread_icmp_ln19_fu_306_p2() {
    icmp_ln19_fu_306_p2 = (!j_0_reg_147.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_147.read() == ap_const_lv10_280);
}

void im_load::thread_icmp_ln879_1_fu_164_p2() {
    icmp_ln879_1_fu_164_p2 = (!mode_V.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(mode_V.read() == ap_const_lv2_1);
}

void im_load::thread_icmp_ln879_2_fu_170_p2() {
    icmp_ln879_2_fu_170_p2 = (!mode_V.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(mode_V.read() == ap_const_lv2_2);
}

void im_load::thread_icmp_ln879_fu_158_p2() {
    icmp_ln879_fu_158_p2 = (!mode_V.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(mode_V.read() == ap_const_lv2_0);
}

void im_load::thread_j_fu_312_p2() {
    j_fu_312_p2 = (!j_0_reg_147.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_0_reg_147.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void im_load::thread_m_axis_video_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY_int.read();
    } else {
        m_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void im_load::thread_m_axis_video_TVALID() {
    m_axis_video_TVALID = regslice_both_m_axis_video_V_data_V_U_vld_out.read();
}

void im_load::thread_m_axis_video_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(m_axis_video_TREADY_int.read(), ap_const_logic_1))) {
        m_axis_video_TVALID_int = ap_const_logic_1;
    } else {
        m_axis_video_TVALID_int = ap_const_logic_0;
    }
}

void im_load::thread_mem_V_address0() {
    mem_V_address0 =  (sc_lv<19>) (zext_ln879_fu_397_p1.read());
}

void im_load::thread_mem_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        mem_V_ce0 = ap_const_logic_1;
    } else {
        mem_V_ce0 = ap_const_logic_0;
    }
}

void im_load::thread_or_ln21_fu_322_p2() {
    or_ln21_fu_322_p2 = (trunc_ln21_fu_318_p1.read() | i_0_reg_135.read());
}

void im_load::thread_or_ln879_1_fu_206_p2() {
    or_ln879_1_fu_206_p2 = (and_ln879_1_fu_200_p2.read() | and_ln879_fu_182_p2.read());
}

void im_load::thread_or_ln879_fu_188_p2() {
    or_ln879_fu_188_p2 = (icmp_ln879_fu_158_p2.read() | icmp_ln879_1_fu_164_p2.read());
}

void im_load::thread_or_ln_fu_336_p3() {
    or_ln_fu_336_p3 = esl_concat<1,9>(tmp_fu_328_p3.read(), or_ln21_fu_322_p2.read());
}

void im_load::thread_select_ln879_1_fu_383_p3() {
    select_ln879_1_fu_383_p3 = (!icmp_ln879_reg_402.read()[0].is_01())? sc_lv<19>(): ((icmp_ln879_reg_402.read()[0].to_bool())? add_ln31_fu_356_p2.read(): sub_ln40_fu_371_p2.read());
}

void im_load::thread_select_ln879_2_fu_390_p3() {
    select_ln879_2_fu_390_p3 = (!or_ln879_1_reg_412.read()[0].is_01())? sc_lv<19>(): ((or_ln879_1_reg_412.read()[0].to_bool())? select_ln879_fu_376_p3.read(): select_ln879_1_fu_383_p3.read());
}

void im_load::thread_select_ln879_fu_376_p3() {
    select_ln879_fu_376_p3 = (!and_ln879_1_reg_407.read()[0].is_01())? sc_lv<19>(): ((and_ln879_1_reg_407.read()[0].to_bool())? sub_ln37_fu_366_p2.read(): add_ln34_fu_361_p2.read());
}

void im_load::thread_shl_ln1_fu_260_p3() {
    shl_ln1_fu_260_p3 = esl_concat<9,9>(sub_ln34_fu_254_p2.read(), ap_const_lv9_0);
}

void im_load::thread_shl_ln31_1_fu_236_p3() {
    shl_ln31_1_fu_236_p3 = esl_concat<9,7>(i_0_reg_135.read(), ap_const_lv7_0);
}

void im_load::thread_shl_ln34_1_fu_272_p3() {
    shl_ln34_1_fu_272_p3 = esl_concat<9,7>(sub_ln34_fu_254_p2.read(), ap_const_lv7_0);
}

void im_load::thread_shl_ln_fu_224_p3() {
    shl_ln_fu_224_p3 = esl_concat<9,9>(i_0_reg_135.read(), ap_const_lv9_0);
}

void im_load::thread_sub_ln34_fu_254_p2() {
    sub_ln34_fu_254_p2 = (!ap_const_lv9_1E0.is_01() || !i_0_reg_135.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1E0) - sc_biguint<9>(i_0_reg_135.read()));
}

void im_load::thread_sub_ln37_fu_366_p2() {
    sub_ln37_fu_366_p2 = (!add_ln37_reg_435.read().is_01() || !zext_ln19_fu_302_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln37_reg_435.read()) - sc_biguint<19>(zext_ln19_fu_302_p1.read()));
}

void im_load::thread_sub_ln40_fu_371_p2() {
    sub_ln40_fu_371_p2 = (!add_ln40_reg_440.read().is_01() || !zext_ln19_fu_302_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(add_ln40_reg_440.read()) - sc_biguint<19>(zext_ln19_fu_302_p1.read()));
}

void im_load::thread_tmp_fu_328_p3() {
    tmp_fu_328_p3 = j_0_reg_147.read().range(9, 9);
}

void im_load::thread_tmp_last_V_fu_350_p2() {
    tmp_last_V_fu_350_p2 = (!j_0_reg_147.read().is_01() || !ap_const_lv10_27F.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_147.read() == ap_const_lv10_27F);
}

void im_load::thread_tmp_user_V_fu_344_p2() {
    tmp_user_V_fu_344_p2 = (!or_ln_fu_336_p3.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(or_ln_fu_336_p3.read() == ap_const_lv10_0);
}

void im_load::thread_trunc_ln21_fu_318_p1() {
    trunc_ln21_fu_318_p1 = j_0_reg_147.read().range(9-1, 0);
}

void im_load::thread_xor_ln879_1_fu_194_p2() {
    xor_ln879_1_fu_194_p2 = (or_ln879_fu_188_p2.read() ^ ap_const_lv1_1);
}

void im_load::thread_xor_ln879_fu_176_p2() {
    xor_ln879_fu_176_p2 = (icmp_ln879_fu_158_p2.read() ^ ap_const_lv1_1);
}

void im_load::thread_zext_ln19_fu_302_p1() {
    zext_ln19_fu_302_p1 = esl_zext<19,10>(j_0_reg_147.read());
}

void im_load::thread_zext_ln31_1_fu_244_p1() {
    zext_ln31_1_fu_244_p1 = esl_zext<19,16>(shl_ln31_1_fu_236_p3.read());
}

void im_load::thread_zext_ln31_fu_232_p1() {
    zext_ln31_fu_232_p1 = esl_zext<19,18>(shl_ln_fu_224_p3.read());
}

void im_load::thread_zext_ln34_1_fu_280_p1() {
    zext_ln34_1_fu_280_p1 = esl_zext<19,16>(shl_ln34_1_fu_272_p3.read());
}

void im_load::thread_zext_ln34_fu_268_p1() {
    zext_ln34_fu_268_p1 = esl_zext<19,18>(shl_ln1_fu_260_p3.read());
}

void im_load::thread_zext_ln879_fu_397_p1() {
    zext_ln879_fu_397_p1 = esl_zext<64,19>(select_ln879_2_fu_390_p3.read());
}

void im_load::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln16_fu_212_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln19_fu_306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(m_axis_video_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(m_axis_video_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void im_load::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mode_V\" :  \"" << mode_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDATA\" :  \"" << m_axis_video_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TVALID\" :  \"" << m_axis_video_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_video_TREADY\" :  \"" << m_axis_video_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TKEEP\" :  \"" << m_axis_video_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TSTRB\" :  \"" << m_axis_video_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TUSER\" :  \"" << m_axis_video_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TLAST\" :  \"" << m_axis_video_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TID\" :  \"" << m_axis_video_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDEST\" :  \"" << m_axis_video_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_V_address0\" :  \"" << mem_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_V_ce0\" :  \"" << mem_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_V_q0\" :  \"" << mem_V_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

